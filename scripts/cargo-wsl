#!/bin/bash
if [ "$2" = "-h" ] || [ "$2" = "--help" ]; then
  cat <<EOF 
cargo wsl [-h --help] <ARGS>
This script builds and runs the game assuming you are running in a wsl environment.
System dependencies: xwin, rsync.
Recommended dependencies: windbgx, renderdoc.
Be sure to run \`cargo setup\` before running this script!
<ARGS> are passed directly to cargo.

Accepts the following environment variables:
NOBUILD=<boolean>   : Do not build the executable.
NOSYNC=<boolean>    : Do not sync to the host environment.
NORUN=<boolean>     : Do not run the final executable.
HOSTPATH=<path>     : Directory for the final executable in "wslpath -au" style. Defaults to \$env:TEMP.
TARGET_DIR=<path>   : Target directory for the build.
PKG_NAME=<string>   : Name of the package to build.
XWIN_DIR=<path>     : Absolute path for the xwin splat. Defaults to ./.xwin-cache/splat.
WINDBG=<boolean>    : Run windbgx.exe to debug the application.
RENDERDOC=<boolean> : Run qrenderdoc.exe to debug the application.
WINDBG_EXE=<path>   : The windbg executable. Defaults to windbgx.exe
RENDERDOC_EXE=<path>: The qrenderdoc executable. Defaults to qrenderdoc.exe
EOF
  exit 0;
fi;

shopt -s globstar
. .env
PKG_NAME="${PKG_NAME:-"bevy_game"}"
TARGET_DIR="${TARGET_DIR:-"target/x86_64-pc-windows-msvc/debug"}"
TEMP="$(wslpath -au "$(pwsh.exe -c "echo \$env:TEMP")")" 
TEMP="$(echo "$TEMP" | tr -d '\r\n')"
HOSTPATH="${HOSTPATH:-$TEMP/$PKG_NAME}" 

XWIN_DIR="${XWIN_DIR:-$(realpath ./.xwin-cache/splat)}"
RUSTFLAGS="target.x86_64-pc-windows-msvc.rustflags=[\"-Lnative=$XWIN_DIR/crt/lib/x86_64\", \"-Lnative=$XWIN_DIR/sdk/lib/um/x86_64\", \"-Lnative=$XWIN_DIR/sdk/lib/ucrt/x86_64\"]"
ARGS="${@:2}"
if [ -z "$NOBUILD" ]; then
  cargo build\
    --target=x86_64-pc-windows-msvc\
    -F debug\
    --config 'target.x86_64-pc-windows-msvc.linker="lld"'\
    --config "$RUSTFLAGS"\
    $ARGS

  RES=$?
  if [ $RES -ne 0 ]; then
    echo Build failed. Did you run \`cargo setup\`?
    exit $RES
  fi
fi

if [ -z "$NOSYNC" ]; then
  rsync -avP --no-r "$TARGET_DIR"/* "$HOSTPATH"
fi


if [ -z "$NORUN" ]; then
  HOST_EXE="$(wslpath -aw "$HOSTPATH/$PKG_NAME.exe")"
  if [ -n "$WINDBG" ]; then
    HOST_SRCPATH="$(
      find ./crates ./src -name "*.rs" -type f -print0 \
      | xargs -0 -I{} dirname {} \
      | sort \
      | uniq \
      | xargs -I{} wslpath -aw {} \
      | tr '\n' ';'
    )"
    WINDBG_EXE=${WINDBG_EXE:-"windbgx.exe"}
    WINDBG_CMD="$WINDBG_EXE -srcpath \"$HOST_SRCPATH\" \"$HOST_EXE\""
    echo "pwsh.exe -c \"$WINDBG_CMD\""
    pwsh.exe -c "$WINDBG_CMD"
  elif [ -n "$RENDERDOC" ]; then
    RENDERDOC_EXE=${RENDERDOC_EXE:-"qrenderdoc.exe"}
    echo "pwsh.exe -c \"$RENDERDOC_EXE $HOST_EXE\""
    pwsh.exe -c "$RENDERDOC_EXE $HOST_EXE" 
  else
    echo "pwsh.exe -c \"$HOST_EXE\""
    pwsh.exe -c "$HOST_EXE"
  fi
fi