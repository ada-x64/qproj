#!/bin/bash
if [ "$2" = "-h" ] || [ "$2" = "--help" ]; then
  cat <<EOF 
cargo wsl [-h --help] <ARGS>
This script builds and runs the game assuming you are running in a wsl environment.
System dependencies: xwin, rsync.
Recommended dependencies: windbgx, renderdoc.
Be sure to run \`cargo setup\` before running this script!
<ARGS> are passed directly to cargo.

Accepts the following environment variables:
NOBUILD=<boolean>   : Do not build the executable.
NOSYNC=<boolean>    : Do not sync to the host environment.
NORUN=<boolean>     : Do not run the final executable.
HOSTPATH=<path>     : Directory for the final executable in "wslpath -au" style. Defaults to \$env:TEMP.
TARGET_DIR=<path>   : Target directory for the build.
EXE=<string>        : Name of the final executable. Should match cargo package name.
XWIN_DIR=<path>     : Absolute path for the xwin splat. Defaults to ./.xwin-cache/splat.
WINDBG=<boolean>    : Run windbgx.exe to debug the application.
RENDERDOC=<boolean> : Run qrenderdoc.exe to debug the application.
EOF
  exit 0;
fi;

. .env
TEMP="$(wslpath -au "$(pwsh.exe -c 'echo $env:TEMP')")" 
TEMP="$(echo "$TEMP" | tr -d '\r\n')"
HOSTPATH="${HOSTPATH:-$TEMP}" 
TARGET_DIR="${TARGET_DIR:-"target/x86_64-pc-windows-msvc/debug"}"
EXE="${EXE:-"bevy_game.exe"}"

XWIN_DIR="${XWIN_DIR:-$(realpath ./.xwin-cache/splat)}"
RUSTFLAGS="target.x86_64-pc-windows-msvc.rustflags=[\"-Lnative=$XWIN_DIR/crt/lib/x86_64\", \"-Lnative=$XWIN_DIR/sdk/lib/um/x86_64\", \"-Lnative=$XWIN_DIR/sdk/lib/ucrt/x86_64\"]"
ARGS="${@:2}"
if [ -z "$NOBUILD" ]; then
  cargo build\
    --target=x86_64-pc-windows-msvc\
    -F debug\
    --config 'target.x86_64-pc-windows-msvc.linker="lld"'\
    --config "$RUSTFLAGS"\
    $ARGS

  RES=$?
  if [ $RES -ne 0 ]; then
    echo Build failed. Did you run \`cargo setup\`?
    exit $RES
  fi
fi

if [ -z "$NOSYNC" ]; then
  # we need to copy the debug symbols (.pdb) as well
  set -e
  rsync -avc --no-r "$TARGET_DIR"/* "$HOSTPATH"
fi


if [ -z "$NORUN" ]; then
  WINPATH="$(wslpath -w "$HOSTPATH/$EXE")"
  if [ -n "$WINDBG" ]; then
    if [ -n "$RENDERDOC" ]; then
      pwsh.exe -c "\
        \$APP=start -PassThru $WINPATH;\
        \$ID=\$APP.ID;\
        start \"renderdoccmd.exe\" \"-w inject --pid=\$ID\ -c ./.renderdoc/\";\
        start \"windbgx.exe\" \"-p \$ID\";\
        "
    else
      pwsh.exe -c "windbgx.exe $WINPATH"
    fi
  elif [ -n "$RENDERDOC" ]; then
    pwsh.exe -c "qrenderdoc.exe $WINPATH" 
  else
    pwsh.exe -c "$WINPATH"
  fi
fi